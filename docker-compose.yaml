services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - 8000:8000
    env_file:
      - ~/e_squirell/backend/env/.env

    restart: on-failure
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery-worker:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A config.celery  worker --loglevel=info
    restart: on-failure

  celery-beat:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A config.celery beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --loglevel=info
    restart: on-failure

  flower:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - celery-worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - 5555:5555
    command: celery -A config.celery flower --port=5555
    restart: on-failure

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    restart: on-failure
    volumes:
      - redis-data:/data
  mosquitto:
    build:
      context: ./mqtt_broker
    volumes:
      - type: bind
        source: ./mqtt_broker/config/
        target: /mosquitto/config/
      - type: bind
        source: ./mqtt_broker/log/
        target: /mosquitto/log/
      - type: volume
        source: data
        target: /mosquitto/data/
    ports:
      - target: 1883
        published: 1883
        protocol: tcp
        mode: host
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host

volumes:
  data:
    name: "mqtt-broker-data"
  redis-data:
    name: "redis-data"
