x-common-variables: &common-variables
  GID: 1000
  UID: 1000
  USER: "marcin"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
#      args: *common-variables
    user: django
    command: uvicorn --host 0.0.0.0 --port 8000 config.asgi:application
    volumes:
      - ./backend:/app
      - type: bind
        source: ~/logs/app.toml
        target: /app/logs/app.toml
    ports:
      - 8000:8000
    restart: on-failure
    depends_on:
      - postgres
      - redis
    env_file:
      - ~/e_squirell/backend/env/.env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - backend_network

  postgres:
    image: postgres:17.5
    volumes:
      - backend_db_volume:/var/lib/postgresql/data
    env_file:
      - ~/e_squirell/backend/env/.env
    ports:
      - "5432:5432"
    networks:
      - backend_network



  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args: *common-variables
    user: django
    env_file:
      - ~/e_squirell/backend/env/.env
    volumes:
      - ./backend:/app
      - type: bind
        source: ~/logs/app.toml
        target: /app/logs/app.toml
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A config.celery  worker --loglevel=warning
    restart: on-failure
    networks:
      - backend_network

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
#      args: *common-variables
    env_file:
      - ~/e_squirell/backend/env/.env
    volumes:
      - ./backend:/app
      - type: bind
        source: ~/logs/app.toml
        target: /app/logs/app.toml


    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A config.celery beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --loglevel=warning
    restart: on-failure
    networks:
      - backend_network

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    restart: on-failure
    volumes:
      - redis-data:/data


  mosquitto:
    build:
      context: ./mqtt_broker
      args: *common-variables
    volumes:
      - type: bind
        source: ./mqtt_broker/config/
        target: /mosquitto/config/
      - type: bind
        source: ./mqtt_broker/log/
        target: /mosquitto/log/
      - type: volume
        source: data
        target: /mosquitto/data/
    ports:
      - target: 1883
        published: 1883
        protocol: tcp
        mode: host
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host

volumes:
  backend_db_volume:
  data:
    name: "mqtt-broker-data"
  redis-data:
    name: "redis-data"

networks:
  backend_network: